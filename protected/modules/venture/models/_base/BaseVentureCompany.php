<?php

/**
 * This is the model base class for the table "venture_company".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "VentureCompany".
 *
 * Columns in table "venture_company" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $legal_person
 * @property string $licensecode
 * @property string $companyname
 * @property string $companyaddress
 * @property integer $employ
 * @property string $sales
 * @property string $industry
 * @property integer $businesstype
 * @property string $policestation
 * @property string $subsidy
 * @property string $start
 *
 */
abstract class BaseVentureCompany extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'venture_company';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'VentureCompany|VentureCompanies', $n);
	}

	public static function representingColumn() {
		return 'start';
	}

	public function rules() {
		return array(
			array('id, legal_person, start', 'required'),
			array('employ, businesstype', 'numerical', 'integerOnly'=>true),
			array('id, legal_person, industry', 'length', 'max'=>11),
			array('licensecode', 'length', 'max'=>15),
			array('companyname, companyaddress', 'length', 'max'=>250),
			array('sales', 'length', 'max'=>6),
			array('policestation', 'length', 'max'=>200),
			array('subsidy', 'length', 'max'=>10),
			array('licensecode, companyname, companyaddress, employ, sales, industry, businesstype, policestation, subsidy', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, legal_person, licensecode, companyname, companyaddress, employ, sales, industry, businesstype, policestation, subsidy, start', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'legal_person' => Yii::t('app', 'Legal Person'),
			'licensecode' => Yii::t('app', 'Licensecode'),
			'companyname' => Yii::t('app', 'Companyname'),
			'companyaddress' => Yii::t('app', 'Companyaddress'),
			'employ' => Yii::t('app', 'Employ'),
			'sales' => Yii::t('app', 'Sales'),
			'industry' => Yii::t('app', 'Industry'),
			'businesstype' => Yii::t('app', 'Businesstype'),
			'policestation' => Yii::t('app', 'Policestation'),
			'subsidy' => Yii::t('app', 'Subsidy'),
			'start' => Yii::t('app', 'Start'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('legal_person', $this->legal_person, true);
		$criteria->compare('licensecode', $this->licensecode, true);
		$criteria->compare('companyname', $this->companyname, true);
		$criteria->compare('companyaddress', $this->companyaddress, true);
		$criteria->compare('employ', $this->employ);
		$criteria->compare('sales', $this->sales, true);
		$criteria->compare('industry', $this->industry, true);
		$criteria->compare('businesstype', $this->businesstype);
		$criteria->compare('policestation', $this->policestation, true);
		$criteria->compare('subsidy', $this->subsidy, true);
		$criteria->compare('start', $this->start, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}