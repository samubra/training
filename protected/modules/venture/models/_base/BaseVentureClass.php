<?php

/**
 * This is the model base class for the table "venture_class".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "VentureClass".
 *
 * Columns in table "venture_class" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $name
 * @property string $code
 * @property string $phone
 * @property string $manager
 * @property string $start
 * @property string $end
 * @property integer $create_time
 *
 */
abstract class BaseVentureClass extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'venture_class';
	}

	public static function label($n = 1) {
		return Yii::t('VentureModule.app', 'VentureClass|VentureClasses', $n);
	}

	public static function representingColumn() {
		return 'name';
	}
	public $starend;
	public function rules() {
		return array(
			array('code,start,end,starend','required'),
			array('name', 'length', 'max'=>255),
			array('code, manager', 'length', 'max'=>20),
			array('phone', 'length', 'max'=>11),
			array('start, endï¼Œstarend', 'safe'),
			array('name, code, phone, manager, start, end, create_time', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, code, phone, manager, start, end, create_time', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'code' => Yii::t('app', 'Code'),
			'phone' => Yii::t('app', 'Phone'),
			'manager' => Yii::t('app', 'Manager'),
			'start' => Yii::t('app', 'Start'),
			'end' => Yii::t('app', 'End'),
			'create_time' => Yii::t('app', 'Create Time'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('manager', $this->manager, true);
		$criteria->compare('start', $this->start, true);
		$criteria->compare('end', $this->end, true);
		$criteria->compare('create_time', $this->create_time);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}